name: Build
on:
  push:
    branches:
        - master
  pull_request:
    branches:
        - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          # - stable
          - nightly
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: build normal
        run: cargo build --release

      - name: test
        run: cargo test

      - name: List releases
        run: ls target/release

  python:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust:
          # - stable
          - nightly
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: arm64

      - name: Install Python dependencies
        run: |
          pip install maturin rdflib
          pip freeze

      - name: Build Python Library
        run: |
          maturin build -m python/Cargo.toml

      - name: Publish Python Library
        continue-on-error: true
        env:
            PYPI_USER: ${{ secrets.PYPI_USER }}
            MATURIN_PASSWORD: ${{ secrets.PYPI_PASS }}
        run: |
          maturin publish -m python/Cargo.toml -u $PYPI_USER
