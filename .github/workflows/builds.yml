name: Build
on:
  push:
    branches:
        - master
  pull_request:
    branches:
        - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          # - stable
          - nightly
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - uses: dtolnay/rust-toolchain@stable
      - name: build normal
        run: cargo build --release
      - name: build static
        run: RUSTFLAGS='-C target-feature=+crt-static' cargo build --release --target x86_64-unknown-linux-gnu --target-dir static/
      - name: move static output
        run: mv static/x86_64-unknown-linux-gnu/release/reasonable reasonable-static

      - name: test
        run: cargo test

      - name: List releases
        run: ls target/release

      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          automatic_release_tag: nightly
          title: Nightly Build ${{ steps.date.outputs.date }}
          files: |
            target/release/reasonable
            reasonable-static
  python:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust:
          # - stable
          - nightly
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.9","3.10","3.11"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          pip install maturin rdflib
          pip freeze

      - name: Build Python Library
        run: |
          maturin build -i python -b pyo3

      - name: Publish Python Library
        continue-on-error: true
        env:
            PYPI_USER: ${{ secrets.PYPI_USER }}
            MATURIN_PASSWORD: ${{ secrets.PYPI_PASS }}
        run: |
          maturin publish -i python -b pyo3 -u $PYPI_USER
